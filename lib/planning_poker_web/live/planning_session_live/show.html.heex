<div class="grid grid-cols-4 gap-8 p-8 items-start">
  <div class="col-span-3">
    <%= case @planning_session do %>
      <% %{state: :lobby} = data -> %>
        <.live_component
          module={PlanningPokerWeb.PlanningSessionLive.LobbyComponent}
          id="lobby"
          data={data}
        />
      <% %{state: :voting, current_issue: issue} -> %>
        <.live_component
          module={PlanningPokerWeb.PlanningSessionLive.VotingComponent}
          id="voting"
          issue={issue}
          mode={@planning_session.mode}
          current_user_id={@current_participant.id}
          session_id={@planning_session.id}
        />
      <% %{state: :magic_estimation} = data -> %>
        <.live_component
          module={PlanningPokerWeb.PlanningSessionLive.MagicEstimationComponent}
          id="magic_estimation"
          unestimated_issues={data.unestimated_issues}
          estimated_issues={data.estimated_issues}
        />
      <% %{state: :results, current_issue: issue} -> %>
        <.live_component
          module={PlanningPokerWeb.PlanningSessionLive.ResultsComponent}
          id="results"
          issue={issue}
          votes={
            @participants
            |> Enum.filter(& &1[:vote])
            |> Enum.sort_by(& &1[:vote])
            |> Enum.reverse()
          }
          classes={
            @participants
            |> Enum.filter(& &1[:vote])
            |> Enum.map(& &1[:vote])
            |> Enum.uniq()
            |> Enum.zip([
              {"bg-primary", "text-primary-content"},
              {"bg-secondary", "text-secondary-content"},
              {"bg-accent", "text-accent-content"},
              {"bg-neutral", "text-neutral-content"},
              {"bg-info", "text-info-content"},
              {"bg-success", "text-success-content"},
              {"bg-warning", "text-warning-content"},
              {"bg-error", "text-error-content"}
            ])
            |> Enum.shuffle()
            |> Map.new()
          }
        />
      <% data -> %>
        <pre>unknown state <%= inspect(data) %></pre>
    <% end %>
  </div>
  <div class="space-y-8">
    <%= if @planning_session.state == :voting and @planning_session.mode != :magic_estimation do %>
      <.live_component
        module={PlanningPokerWeb.PlanningSessionLive.VotingControlsComponent}
        id="voting-controls"
        options={@planning_session.options}
        current_participant={@current_participant}
      />
    <% end %>

    <.live_component
      module={PlanningPokerWeb.PlanningSessionLive.ParticipantsListComponent}
      id="participants-list"
      participants={@participants}
    />

    <div class="flex flex-col items-center gap-4">
      <Layouts.theme_toggle />
      <%= if @planning_session.state == :lobby do %>
        <button phx-click="change_mode" class="btn btn-primary btn-sm">
          Change mode to <%= if @planning_session.mode == :magic_estimation, do: "PlanningPoker", else: "MagicEstimation" %>
        </button>
      <% end %>
      <button phx-click="kill_planning_session" id="kill-button" class="btn btn-warning btn-sm hidden recently_opened">Kill</button>
    </div>
  </div>
</div>
